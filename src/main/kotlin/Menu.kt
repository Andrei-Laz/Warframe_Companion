package org.example

import java.util.Scanner
import WarframeBinario

fun menuPrincipal() {
    val sc = Scanner(System.`in`)
    var opcion: Int?

    while (true) {
        println(
            """
            
            ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
            ‚ïë        MEN√ö PRINCIPAL - WARFRAMES      ‚ïë
            ‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£
            ‚ïë 1. Mostrar todos los registros         ‚ïë
            ‚ïë 2. A√±adir un nuevo registro            ‚ïë
            ‚ïë 3. Modificar un registro (por ID)      ‚ïë
            ‚ïë 4. Eliminar un registro (por ID)       ‚ïë
            ‚ïë 5. Salir                               ‚ïë
            ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
            """.trimIndent()
        )

        print("Selecciona una opci√≥n (1-5): ")
        opcion = sc.nextLine().toIntOrNull()

        when (opcion) {
            1 -> {
                println("\n--- MOSTRAR TODOS LOS REGISTROS ---")
                mostrar()
            }
            2 -> {
                println("\n--- A√ëADIR NUEVO REGISTRO ---")
                nuevoReg(sc)
            }
            3 -> {
                println("\n--- MODIFICAR REGISTRO ---")
                print("Introduce el ID del registro a modificar: ")
                val id = sc.nextLine().toIntOrNull()
                if (id != null) {
                    print("Nuevo nombre: ")
                    val nombre = sc.nextLine()
                    print("Nueva pasiva: ")
                    val pasiva = sc.nextLine()
                    modificar(id, nombre, pasiva)
                } else {
                    println("‚ö†Ô∏è  ID inv√°lido.")
                }
            }
            4 -> {
                println("\n--- ELIMINAR REGISTRO ---")
                print("Introduce el ID del registro a eliminar: ")
                val id = sc.nextLine().toIntOrNull()
                if (id != null) eliminar(id) else println("‚ö†Ô∏è  ID inv√°lido.")
            }
            5 -> {
                println("üëã Saliendo del programa...")
                break
            }
            else -> {
                println("‚ö†Ô∏è  Opci√≥n inv√°lida. Introduce un n√∫mero del 1 al 5.")
            }
        }
    }
}

// Funci√≥n auxiliar para a√±adir registros nuevos desde consola
fun nuevoReg(sc: Scanner) {
    try {
        print("ID: ")
        val id = sc.nextLine().toIntOrNull() ?: throw Exception("ID inv√°lido")

        print("Nombre: ")
        val nombre = sc.nextLine()

        print("Vida: ")
        val vida = sc.nextLine().toIntOrNull() ?: throw Exception("Valor de vida inv√°lido")

        print("Armadura: ")
        val armadura = sc.nextLine().toIntOrNull() ?: throw Exception("Valor de armadura inv√°lido")

        print("Energ√≠a: ")
        val energia = sc.nextLine().toIntOrNull() ?: throw Exception("Valor de energ√≠a inv√°lido")

        print("Velocidad de sprint: ")
        val sprint = sc.nextLine().toDoubleOrNull() ?: throw Exception("Valor de velocidad inv√°lido")

        print("Pasiva: ")
        val pasiva = sc.nextLine()

        val nuevo = WarframeBinario(id, nombre, vida, armadura, energia, sprint, pasiva)
        anadir(nuevo)
        println("‚úÖ Registro a√±adido correctamente.")

    } catch (e: Exception) {
        println("‚ö†Ô∏è  Error: ${e.message}")
    }
}
